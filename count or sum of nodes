// build tree from inorder and postorder

#include <bits/stdc++.h>
using namespace std;

struct Node {
  int data;
  struct Node* left;
  struct Node* right;

  Node(int val)
  {
    data = val;
    left = NULL;
    right = NULL;
  }
};

int count_nodes(Node* temp)
{
  static int sum = 0;
    if(temp == NULL)
    {
      return 0;
    }
    return temp->data + count_nodes(temp->left) + count_nodes(temp->right);
  
return sum;
}

int main() {
  // creating a tree from struct

  Node* root = new Node(1);
  root->left = new Node(2);
  root->right = new  Node(3);
  root->left->left = new  Node(4);
  root->left->right = new  Node(5);
  root->right->left = new  Node(6);
  root->right->right = new  Node(7);

  cout<<count_nodes(root)<<endl;
}
